@page "/domain-projections"
@inject AppState App
@inject CronusClient Cronus
@inject IJSRuntime JSRuntime

<h2>Projections</h2>

<div>
    <MudTable Items="@Domain?.Projections" PageLabel="dfjgh" LoadInitialData="true" FilterByColumnName="Name" PageSize="9999" ShowPaging="false" Striped="false" MultiSelection="false" AllowSelection="true" Elevation="3" @bind-SelectedItem="@Projection">
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>ID</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Name</MudTd>
            <MudTd>@context.Id</MudTd>
        </RowTemplate>
    </MudTable>
    <div>
        <div class="mt-4">
            <h2>@Projection?.Name Events</h2>
            <MudTable Items="@Projection?.Events" LoadInitialData="true" FilterByColumnName="Name" PageSize="9999" ShowPaging="false" Striped="false" AllowSelection="true" Elevation="3">
                <HeaderContent>
                    <MudTh>Name</MudTh>
                    <MudTh>ID</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>@context.Name</MudTd>
                    <MudTd><i>@context.Id</i></MudTd>
                </RowTemplate>
            </MudTable>
        </div>
    </div>
</div>

@code {
    DomainDto Domain { get; set; }

    DomainProjectionDto Projection { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Domain = await Cronus.GetDomainAsync(@App.Connection);
        this.StateHasChanged();
    }
}
