@page "/domain-ports"
@inject AppState App
@inject CronusClient Cronus
@inject IJSRuntime JSRuntime
@inject ILogger<DomainPorts> Log

<h2>Ports</h2>

<div>

    <MudTable Items="@Domain?.Ports" LoadInitialData="true" FilterByColumnName="Name" PageSize="9999" ShowPaging="false" Striped="false" AllowSelection="true" MultiSelection="false" @bind-SelectedItem="@Port" Elevation="3">
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>ID</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Name</MudTd>
            <MudTd>@context.Id</MudTd>
        </RowTemplate>
    </MudTable>

    <div>
        <div class="mt-8">
            <h3>@Port?.Name Events</h3>
            <MudTable Items="@Port?.Events" LoadInitialData="true" FilterByColumnName="Name" PageSize="9999" ShowPaging="false" Striped="false" AllowSelection="true" Elevation="3">
                <HeaderContent>
                    <MudTh>Name</MudTh>
                    <MudTh>ID</MudTh>
                    <MudTh>Actions</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>@context.Name</MudTd>
                    <MudTd><i>@context.Id</i></MudTd>
                    <MudTd>
                        <MudButton Variant="Variant.Outlined" EndIcon="@Icons.Filled.Delete" Color="Color.Success" OnClick="@(async () => await OnGG())">Request all public event</MudButton>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        </div>
    </div>
</div>

@code {
    DomainDto Domain { get; set; }

    DomainPortDto Port { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Domain = await Cronus.GetDomainAsync(@App.Connection);
        this.StateHasChanged();
    }

    protected async Task OnGG()
    {
        Log.LogInformation("GG");

        StateHasChanged();
    }
}
